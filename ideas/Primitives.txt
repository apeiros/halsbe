PRIMITIVES

About
	The word primitives is generally used for things not implemented in halsbe.
	There are 2 main cases of primitives. One is object implementations provided
	by the execution environment, the other are keywords that provide
	pseudo-methods. So those keywords look like objects while they in fact are
	not.

List of primitive Keywords
	executable: The current executable (argv[0] in C)
	argv:       arguments passed in at program start
	stdio:      IO.combine(stdin, stdout)
	stdin:      standard readable IO
	stdout:     standard informal writable IO
	stderr:     standard error writable IO
	env:        environment of the process
	memory:     manage the memory fragment allocated for an individual object.
	            see Memory.txt
	old:        in postconditions the object as it was before the method invocation
	returned:   in postconditions the returnvalue
	vm:         Bootstrap Object implementation in halsbe
	object:
		-memory fragment
		-method lookup table
		-
	block:
		-argument names
		-argument defaults
		-arity
		-local variable namelist
		-local variable reference list
		-self
		-owner
		-caller


Other things that require primitives or wrappers
	foreign function interface
	stdin/-out/-err
	symbols/symboltable
	method invocation
